(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function t(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(e){if(e.ep)return;e.ep=!0;const r=t(e);fetch(e.href,r)}})();function u(c,o,t){return`${c.substring(0,o)}${t}${c.substring(o+1)}`}function a(c){let o;try{[,o]=c.match(/^\((.*)\)$/)}catch{throw new Error("Invalid input")}const t=[],n={x:0,y:0},e={};for(let r=0;r<o.length;r++){let i=o[r];if(i==="(")n.x++;else if(i===")")n.x--;else if(i!==" "){if(Number.isNaN(parseInt(i,10)))throw new Error("Invalid input");for(;!Number.isNaN(parseInt(o[r+1],10));)r++,i=`${i}${o[r]}`;t.push({value:parseInt(i,10),x:n.x,y:n.y}),e[n.x]===void 0?e[n.x]=i.length:e[n.x]=Math.max(e[n.x],i.length)}}return{tree:t,offsets:e}}function d(c,o){const t=[""];for(let n=0;n<c.length;n++){const e=c[n];let r=e.x*4;Object.entries(o).forEach(([l,s])=>{s>1&&parseInt(l,10)<e.x&&(r+=s-1)}),t[t.length-1]+=Array(r).fill(" ").join(""),t[t.length-1]+=`${e.value}`,c[n+1]&&c[n+1].x>e.x&&(t[t.length-1]+=Array(o[e.x]+3-e.value.toString().length).fill("-").join(""),t[t.length-1]+="+");const i=c.findIndex(l=>l.x===e.x);if(i!==-1){const l=r;let s=i+1;for(;s<n;)t[s][l]===" "&&(t[s]=u(t[s],l,"|")),s++}t.push("")}return t.join(`
`)}const f=document.querySelector("#tree-form");if(!f)throw new Error("Form not found");f.addEventListener("submit",c=>{c.preventDefault();const o=f.querySelector("#tree-data"),t=document.querySelector("#errors");t&&(t.innerHTML="");try{if(!o)throw new Error("Input not found");const n=o.value.trim();if(!n)throw new Error("Tree data not found");const{tree:e,offsets:r}=a(n),i=d(e,r),l=document.querySelector("#tree-container");if(!l)throw new Error("Container not found");const s=l.parentElement;s&&(s.style.height=`${s.clientHeight}px`),l.innerHTML=i,s&&(s.style.height=`${l.clientHeight}px`)}catch(n){t&&n instanceof Error&&(t.innerHTML=n.message)}});
